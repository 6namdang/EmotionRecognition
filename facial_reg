{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f0e067af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T16:51:20.071735Z",
     "iopub.status.busy": "2024-09-28T16:51:20.071298Z",
     "iopub.status.idle": "2024-09-28T16:51:36.335124Z",
     "shell.execute_reply": "2024-09-28T16:51:36.333737Z"
    },
    "papermill": {
     "duration": 16.273195,
     "end_time": "2024-09-28T16:51:36.338227",
     "exception": false,
     "start_time": "2024-09-28T16:51:20.065032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#import necccesary libraries\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras.utils import plot_model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4044b84e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T16:51:36.348332Z",
     "iopub.status.busy": "2024-09-28T16:51:36.347576Z",
     "iopub.status.idle": "2024-09-28T16:52:03.405658Z",
     "shell.execute_reply": "2024-09-28T16:52:03.404347Z"
    },
    "papermill": {
     "duration": 27.066186,
     "end_time": "2024-09-28T16:52:03.408651",
     "exception": false,
     "start_time": "2024-09-28T16:51:36.342465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 28709 images belonging to 7 classes.\n",
      "Found 7178 images belonging to 7 classes.\n"
     ]
    }
   ],
   "source": [
    "# Define the directories where the images are located\n",
    "train_dir = '/kaggle/input/fer2013/train'  # Path to the training dataset directory\n",
    "test_dir = '/kaggle/input/fer2013/test'    # Path to the testing dataset directory\n",
    "\n",
    "# Create ImageDataGenerators for loading and augmenting the images\n",
    "train_datagen = ImageDataGenerator(\n",
    "    rescale=1./255,  # Normalize the image data to values between 0 and 1\n",
    "    rotation_range=30,  # Randomly rotate images\n",
    "    width_shift_range=0.2,  # Randomly shift images horizontally\n",
    "    height_shift_range=0.2,  # Randomly shift images vertically\n",
    "    shear_range=0.2,  # Randomly shear the images\n",
    "    zoom_range=0.2,  # Randomly zoom in on images\n",
    "    horizontal_flip=True,  # Randomly flip images horizontally\n",
    "    fill_mode='nearest'\n",
    ")\n",
    "\n",
    "test_datagen = ImageDataGenerator(rescale=1./255)\n",
    "\n",
    "# Load images from directories\n",
    "train_generator = train_datagen.flow_from_directory(\n",
    "    train_dir,\n",
    "    target_size=(48, 48),  # Image size\n",
    "    batch_size=64,  # Batch size\n",
    "    color_mode='grayscale',  # The images are in grayscale\n",
    "    class_mode='categorical'  # Use categorical labels (7 emotions)\n",
    ")\n",
    "\n",
    "test_generator = test_datagen.flow_from_directory(\n",
    "    test_dir,\n",
    "    target_size=(48, 48),\n",
    "    batch_size=64,\n",
    "    color_mode='grayscale',\n",
    "    class_mode='categorical'\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "aff3fec5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T16:52:03.418630Z",
     "iopub.status.busy": "2024-09-28T16:52:03.417968Z",
     "iopub.status.idle": "2024-09-28T16:52:03.661995Z",
     "shell.execute_reply": "2024-09-28T16:52:03.660633Z"
    },
    "papermill": {
     "duration": 0.25198,
     "end_time": "2024-09-28T16:52:03.664543",
     "exception": false,
     "start_time": "2024-09-28T16:52:03.412563",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">46</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">46</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │           <span style=\"color: #00af00; text-decoration-color: #00af00\">640</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">23</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">23</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">21</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">21</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12800</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,638,528</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">903</span> │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m46\u001b[0m, \u001b[38;5;34m46\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │           \u001b[38;5;34m640\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m23\u001b[0m, \u001b[38;5;34m23\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m21\u001b[0m, \u001b[38;5;34m21\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │        \u001b[38;5;34m73,856\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ flatten (\u001b[38;5;33mFlatten\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12800\u001b[0m)          │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │     \u001b[38;5;34m1,638,528\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m)              │           \u001b[38;5;34m903\u001b[0m │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,713,927</span> (6.54 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,713,927\u001b[0m (6.54 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,713,927</span> (6.54 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,713,927\u001b[0m (6.54 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#This model was based on a paper in IEEE called Ensemble CNN, which has \n",
    "model = Sequential()\n",
    "\n",
    "# First Convolutional Layer\n",
    "model.add(Conv2D(64, (3, 3), activation='relu', input_shape=(48, 48, 1)))  # 1 channel for grayscale images\n",
    "model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "# Second Convolutional Layer\n",
    "model.add(Conv2D(128, (3, 3), activation='relu'))\n",
    "model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "# Flatten the layers\n",
    "model.add(Flatten())\n",
    "\n",
    "# Fully connected layer\n",
    "model.add(Dense(128, activation='relu'))\n",
    "model.add(Dropout(0.5))\n",
    "\n",
    "# Output layer (7 classes for 7 emotions)\n",
    "model.add(Dense(7, activation='softmax'))\n",
    "\n",
    "# Compile the model\n",
    "model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Print model summary\n",
    "model.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1ffdd706",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T16:52:03.676723Z",
     "iopub.status.busy": "2024-09-28T16:52:03.676218Z",
     "iopub.status.idle": "2024-09-28T17:14:36.387415Z",
     "shell.execute_reply": "2024-09-28T17:14:36.386302Z"
    },
    "papermill": {
     "duration": 1352.720305,
     "end_time": "2024-09-28T17:14:36.389935",
     "exception": false,
     "start_time": "2024-09-28T16:52:03.669630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n",
      "  self._warn_if_super_not_called()\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m231s\u001b[0m 505ms/step - accuracy: 0.2411 - loss: 1.8353 - val_accuracy: 0.2641 - val_loss: 1.7562\n",
      "Epoch 2/20\n",
      "\u001b[1m  1/448\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m1:41\u001b[0m 226ms/step - accuracy: 0.2344 - loss: 1.8334"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/contextlib.py:153: UserWarning: Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches. You may need to use the `.repeat()` function when building your dataset.\n",
      "  self.gen.throw(typ, value, traceback)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 6ms/step - accuracy: 0.2344 - loss: 1.8334 - val_accuracy: 0.1000 - val_loss: 1.7555\n",
      "Epoch 3/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m119s\u001b[0m 264ms/step - accuracy: 0.2520 - loss: 1.7884 - val_accuracy: 0.2799 - val_loss: 1.7391\n",
      "Epoch 4/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 64us/step - accuracy: 0.1562 - loss: 1.8398 - val_accuracy: 0.4000 - val_loss: 1.6759\n",
      "Epoch 5/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m120s\u001b[0m 266ms/step - accuracy: 0.2658 - loss: 1.7727 - val_accuracy: 0.2889 - val_loss: 1.7234\n",
      "Epoch 6/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 70us/step - accuracy: 0.2344 - loss: 1.8046 - val_accuracy: 0.3000 - val_loss: 1.5539\n",
      "Epoch 7/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m123s\u001b[0m 273ms/step - accuracy: 0.2701 - loss: 1.7587 - val_accuracy: 0.3083 - val_loss: 1.7030\n",
      "Epoch 8/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 21ms/step - accuracy: 0.2969 - loss: 1.7032 - val_accuracy: 0.3000 - val_loss: 1.7425\n",
      "Epoch 9/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m121s\u001b[0m 268ms/step - accuracy: 0.2744 - loss: 1.7524 - val_accuracy: 0.3271 - val_loss: 1.6641\n",
      "Epoch 10/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76us/step - accuracy: 0.4219 - loss: 1.5580 - val_accuracy: 0.3000 - val_loss: 1.5298\n",
      "Epoch 11/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m119s\u001b[0m 265ms/step - accuracy: 0.2922 - loss: 1.7289 - val_accuracy: 0.3270 - val_loss: 1.6235\n",
      "Epoch 12/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 67us/step - accuracy: 0.4219 - loss: 1.6547 - val_accuracy: 0.2000 - val_loss: 1.6784\n",
      "Epoch 13/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m118s\u001b[0m 262ms/step - accuracy: 0.3080 - loss: 1.7061 - val_accuracy: 0.3852 - val_loss: 1.5877\n",
      "Epoch 14/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 87us/step - accuracy: 0.3281 - loss: 1.7237 - val_accuracy: 0.4000 - val_loss: 1.6429\n",
      "Epoch 15/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m144s\u001b[0m 267ms/step - accuracy: 0.3182 - loss: 1.6834 - val_accuracy: 0.3795 - val_loss: 1.5628\n",
      "Epoch 16/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 68us/step - accuracy: 0.4375 - loss: 1.5445 - val_accuracy: 0.4000 - val_loss: 1.3956\n",
      "Epoch 17/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m121s\u001b[0m 268ms/step - accuracy: 0.3312 - loss: 1.6678 - val_accuracy: 0.4081 - val_loss: 1.5177\n",
      "Epoch 18/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 67us/step - accuracy: 0.2969 - loss: 1.7220 - val_accuracy: 0.4000 - val_loss: 1.4854\n",
      "Epoch 19/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m120s\u001b[0m 267ms/step - accuracy: 0.3398 - loss: 1.6506 - val_accuracy: 0.4235 - val_loss: 1.4952\n",
      "Epoch 20/20\n",
      "\u001b[1m448/448\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 66us/step - accuracy: 0.2656 - loss: 1.6821 - val_accuracy: 0.5000 - val_loss: 1.5060\n"
     ]
    }
   ],
   "source": [
    "# Train the model\n",
    "history = model.fit(\n",
    "    train_generator,\n",
    "    steps_per_epoch=train_generator.n // train_generator.batch_size,\n",
    "    epochs=20,  # You can change the number of epochs based on your needs\n",
    "    validation_data=test_generator,\n",
    "    validation_steps=test_generator.n // test_generator.batch_size\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "39a46b20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T17:14:37.267769Z",
     "iopub.status.busy": "2024-09-28T17:14:37.266811Z",
     "iopub.status.idle": "2024-09-28T17:14:48.011651Z",
     "shell.execute_reply": "2024-09-28T17:14:48.010503Z"
    },
    "papermill": {
     "duration": 11.18854,
     "end_time": "2024-09-28T17:14:48.014893",
     "exception": false,
     "start_time": "2024-09-28T17:14:36.826353",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m112/112\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 93ms/step - accuracy: 0.4248 - loss: 1.4906\n",
      "Test accuracy: 0.421875\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model on test data\n",
    "test_loss, test_acc = model.evaluate(test_generator, steps=test_generator.n // test_generator.batch_size)\n",
    "print(f'Test accuracy: {test_acc}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "215ca303",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-28T17:14:48.969450Z",
     "iopub.status.busy": "2024-09-28T17:14:48.969002Z",
     "iopub.status.idle": "2024-09-28T17:14:49.562378Z",
     "shell.execute_reply": "2024-09-28T17:14:49.561125Z"
    },
    "papermill": {
     "duration": 1.045281,
     "end_time": "2024-09-28T17:14:49.565185",
     "exception": false,
     "start_time": "2024-09-28T17:14:48.519904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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ADkWb9RbjgN6/rHITLdzueJ839N/x1rrLcfSW44Des+x9JbjgN5zLL3lOKDnH4ut53q5BC+EEEIIIYQQQriQBN5CCCGEEEIIIYQLSeDdjoCAAJYsWUJAQICnh9ItveU4oPccS285DpBj8Ua95Tigdx2L8E696XestxxLbzkO6D3H0luOA3rPsfSW44DedSy26BXF1YQQQgghhBBCCG8lM95CCCGEEEIIIYQLSeAthBBCCCGEEEK4kATeQgghhBBCCCGEC0ngLYQQQgghhBBCuFCfDbyXL19OamoqgYGBZGdns2XLlk63f++998jIyCAwMJDRo0fz+eefu2mk7Vu6dCkTJ04kLCyMuLg4Zs+ezaFDhzp9zsqVKzEYDG2+AgMD3TTijv3ud787b1wZGRmdPsfb3g9damrqecdiMBh48MEH293eW96T7777jmuuuYakpCQMBgMff/xxm8c1TWPx4sUkJiYSFBTEtGnTOHLkSJf7tffvzBk6O5ampiYeffRRRo8eTUhICElJScybN4/Tp093uk9HfkddeRwAd95553ljmjFjRpf79bb3BGj3b8ZgMPD00093uE9PvCei5+np53roPed7Odd7/v2Qc733neuh95zv5VzftT4ZeL/zzjssXLiQJUuWsH37djIzM5k+fTrFxcXtbv/DDz8wd+5c7r77bnbs2MHs2bOZPXs2e/fudfPIW6xbt44HH3yQTZs28dVXX9HU1MSVV15JTU1Np88LDw+noKDA+nXq1Ck3jbhzI0eObDOuDRs2dLitN74fuh9//LHNcXz11VcA3HTTTR0+xxvek5qaGjIzM1m+fHm7jz/11FM899xzvPDCC2zevJmQkBCmT59OfX19h/u09+/MWTo7ltraWrZv385vf/tbtm/fzocffsihQ4e49tpru9yvPb+jztDVewIwY8aMNmN66623Ot2nN74nQJtjKCgoYMWKFRgMBm644YZO9+vu90T0LL3hXA+963wv53o51ztLbznXQ+8538u53gZaHzRp0iTtwQcftH5vMpm0pKQkbenSpe1uf/PNN2tXX311m59lZ2dr9913n0vHaY/i4mIN0NatW9fhNq+88ooWERHhvkHZaMmSJVpmZqbN2/eE90P3i1/8Qhs0aJBmNpvbfdwb3xNA++ijj6zfm81mLSEhQXv66aetPysvL9cCAgK0t956q8P92Pt35grnHkt7tmzZogHaqVOnOtzG3t9RZ2vvOO644w5t1qxZdu2np7wns2bN0i677LJOt/H0eyK8X28812tazz3fy7k+wr2D6oKc68/nDeeV3nK+l3N9+/rcjHdjYyPbtm1j2rRp1p8ZjUamTZvGxo0b233Oxo0b22wPMH369A6394SKigoAoqOjO92uurqagQMHkpKSwqxZs9i3b587htelI0eOkJSURHp6Orfddhs5OTkdbtsT3g9Qv2uvv/46d911FwaDocPtvPU90Z04cYLCwsI2/+YRERFkZ2d3+G/uyN+Zp1RUVGAwGIiMjOx0O3t+R91l7dq1xMXFMWzYMO6//37Kyso63LanvCdFRUX861//4u677+5yW298T4R36K3neujZ53s513vX+9GanOsVbz2v9LbzfV891/e5wLu0tBSTyUR8fHybn8fHx1NYWNjucwoLC+3a3t3MZjMPPfQQU6ZMYdSoUR1uN2zYMFasWMEnn3zC66+/jtls5sILLyQvL8+Noz1fdnY2K1euZPXq1Tz//POcOHGCiy++mKqqqna39/b3Q/fxxx9TXl7OnXfe2eE23vqetKb/u9rzb+7I35kn1NfX8+ijjzJ37lzCw8M73M7e31F3mDFjBqtWrWLNmjU8+eSTrFu3jpkzZ2Iymdrdvqe8J6+++iphYWFcf/31nW7nje+J8B698VwPPft8L+d673o/ziXneu89r/TG831fPdf7enoAovsefPBB9u7d2+Wah8mTJzN58mTr9xdeeCHDhw/n73//O3/4wx9cPcwOzZw503p/zJgxZGdnM3DgQN59912broR5q5dffpmZM2eSlJTU4Tbe+p70BU1NTdx8881omsbzzz/f6bbe+Dt6yy23WO+PHj2aMWPGMGjQINauXcvll1/ukTE5w4oVK7jtttu6LDzkje+JEK7Wk8/3vfVvVs713q2nn+uhd57v++q5vs/NeMfExODj40NRUVGbnxcVFZGQkNDucxISEuza3p0WLFjAZ599xrfffkv//v3teq6fnx9jx47l6NGjLhqdYyIjIxk6dGiH4/Lm90N36tQpvv76a37+85/b9TxvfE/0f1d7/s0d+TtzJ/1EfOrUKb766qtOr4C3p6vfUU9IT08nJiamwzF5+3sCsH79eg4dOmT33w1453siPKe3neuh953v5VzvXe+HnOvP563nlZ5+vu/L5/o+F3j7+/szfvx41qxZY/2Z2WxmzZo1ba5GtjZ58uQ22wN89dVXHW7vDpqmsWDBAj766CO++eYb0tLS7N6HyWRiz549JCYmumCEjquurubYsWMdjssb349zvfLKK8TFxXH11Vfb9TxvfE/S0tJISEho829eWVnJ5s2bO/w3d+TvzF30E/GRI0f4+uuv6devn9376Op31BPy8vIoKyvrcEze/J7oXn75ZcaPH09mZqbdz/XG90R4Tm8510PvPd/Lud673g8515/PW88rPf1836fP9Z6t7eYZb7/9thYQEKCtXLlS279/v3bvvfdqkZGRWmFhoaZpmnb77bdrv/71r63bf//995qvr6+2bNky7cCBA9qSJUs0Pz8/bc+ePZ46BO3+++/XIiIitLVr12oFBQXWr9raWus25x7H73//e+3LL7/Ujh07pm3btk275ZZbtMDAQG3fvn2eOASrhx9+WFu7dq124sQJ7fvvv9emTZumxcTEaMXFxZqm9Yz3ozWTyaQNGDBAe/TRR897zFvfk6qqKm3Hjh3ajh07NEB75plntB07dlirfz7xxBNaZGSk9sknn2i7d+/WZs2apaWlpWl1dXXWfVx22WXaX/7yF+v3Xf2deeJYGhsbtWuvvVbr37+/tnPnzjZ/Ow0NDR0eS1e/o+4+jqqqKu2Xv/yltnHjRu3EiRPa119/rY0bN04bMmSIVl9f3+FxeON7oquoqNCCg4O1559/vt19eMN7InqW3nCu17Tec76Xc73n3w8513vfub6rY+lJ53s513etTwbemqZpf/nLX7QBAwZo/v7+2qRJk7RNmzZZH7vkkku0O+64o8327777rjZ06FDN399fGzlypPavf/3LzSNuC2j365VXXrFuc+5xPPTQQ9Zjjo+P16666ipt+/bt7h/8OebMmaMlJiZq/v7+WnJysjZnzhzt6NGj1sd7wvvR2pdffqkB2qFDh857zFvfk2+//bbd3yd9rGazWfvtb3+rxcfHawEBAdrll19+3vENHDhQW7JkSZufdfZ35oljOXHiRId/O99++22Hx9LV76i7j6O2tla78sortdjYWM3Pz08bOHCgds8995x3Qu0J74nu73//uxYUFKSVl5e3uw9veE9Ez9PTz/Wa1nvO93Ku9/z7Ied67zvXd3UsPel8L+f6rhk0TdMcnS0XQgghhBBCCCFE5/rcGm8hhBBCCCGEEMKdJPAWQgghhBBCCCFcSAJvIYQQQgghhBDChSTwFkIIIYQQQgghXEgCbyGEEEIIIYQQwoUk8BZCCCGEEEIIIVxIAm8hhBBCCCGEEMKFJPAWQgghhBBCCCFcSAJvIYQQQgghhBDChSTwFkIIIYQQQgghXEgCbyGEEEIIIYQQwoUk8BZCCCGEEEIIIVzo/wM3zSQ95Nsd5QAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot training & validation accuracy and loss\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(12, 4))\n",
    "\n",
    "plt.subplot(1, 2, 1)\n",
    "plt.plot(history.history['accuracy'], label='Train Accuracy')\n",
    "plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n",
    "plt.legend()\n",
    "plt.title('Accuracy')\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "plt.plot(history.history['loss'], label='Train Loss')\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "plt.legend()\n",
    "plt.title('Loss')\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ebfad974",
   "metadata": {
    "papermill": {
     "duration": 0.449797,
     "end_time": "2024-09-28T17:14:50.459538",
     "exception": false,
     "start_time": "2024-09-28T17:14:50.009741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 786787,
     "sourceId": 1351797,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30775,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1416.443151,
   "end_time": "2024-09-28T17:14:53.361185",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-28T16:51:16.918034",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
